<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy if there is more than 1 instance of the object
if(instance_number(object_index)&gt;1){
    instance_destroy();
    exit;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize everything


combo = 0;
comboTimer = 0;
comboTimerMax = 1;
global.comboDropRate = 1/125;


global.hitScore = 0;
global.bestHitScore=0;
global.comboMultiplier = 1;
global.maxComboMultiplier = 1;
global.combo = 0;
global.maxCombo = 0;
global.freezeCombo=false;
global.freezeComboTimeline=false;

global.unstuckX=400;
global.unstuckY=608-64;


unstuckBoundary=32;



//ranks
rankText[0]="";
rankText[1]="BRONZE";
rankText[2]="SILVER";
rankText[3]="GOLD";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the particle system for the scorebar

// -------- Particle System --------
// Run this code at the beginning of your game
global.scorebarpsys = part_system_create();
part_system_depth(global.scorebarpsys, -100);
part_system_automatic_draw(global.scorebarpsys,0);

// -------- Particle Type --------
// Run this code at the beginning of your game
global.scorebarptyp = part_type_create();
part_type_shape(global.scorebarptyp, pt_shape_pixel);
part_type_color3(global.scorebarptyp, 15525100, 15260123, 15000812);
part_type_alpha2(global.scorebarptyp, 0.99, 0.2);
part_type_life(global.scorebarptyp, 10, 12);
part_type_size(global.scorebarptyp, 0.5, 3, -0.001, 0);
part_type_speed(global.scorebarptyp, 0.36, 0.61, -0.004, 0);
part_type_direction(global.scorebarptyp, 34.41, 256.53, -0.78, 0);
part_type_orientation(global.scorebarptyp, 348.75, 457.24, 1.07, 0, false);
part_type_gravity(global.scorebarptyp, 0, 270);
part_type_blend(global.scorebarptyp, true);


scorebar_seq=scrSeededSeqInit(2000,2);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize the surface for the scorebar


surf=surface_create(800,608);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free the surface
if(surface_exists(surf)) surface_free(surf);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increment combo
if(!global.freezeCombo&amp;&amp;!global.freezeComboTimeline){
    if(comboTimer&gt;0) comboTimer-=global.comboDropRate;
    else{
        global.combo = 0;
        comboTimer = 0;
        if(global.comboInit) global.fullCombo=false //break combo/fullcombo
    }
}

global.comboMultiplier = 1 + sqrt(global.combo)/2;
//show_debug_message(global.comboMultiplier);
if(global.combo&gt;global.maxCombo) {
    global.maxCombo = global.combo;
    global.maxComboMultiplier = global.comboMultiplier;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display the scorebar using the particles

if(global.scoreVisible&amp;&amp;instance_exists(objAvoidanceMarker)){
    repeat(floor(20*comboTimer)){
        partX = room_width - 32 - random_seeded(128*comboTimer,scorebar_seq);
        partY = room_height - 16 + random_seeded_range(-12,12,scorebar_seq);
        part_particles_create(global.scorebarpsys, partX , partY, global.scorebarptyp, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ranks
var _oldRank=global.currentRank;
for(var i=0;i&lt;4;i++){
    if(global.hitScore&gt;global.rankScore[i]) global.currentRank=i;
}
if(global.currentRank&gt;_oldRank&amp;&amp;instance_exists(objPlayer)){
    with(instance_create(objPlayer.x,objPlayer.y,objTextbox)){
    
        image_xscale=0.75;
        image_yscale=0.75;
        font=fScore;
        instance_fade_out(id,100);
        instance_move_to(id,x,y-64,100,tween_linear);
        str=other.rankText[global.currentRank]+ " RANK ACHIEVED! !";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy the instance
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the score counter widget 
if(global.ance&amp;&amp;global.scoreVisible&amp;&amp;instance_exists(objAvoidanceMarker)){
    draw_set_font(fScore);
    draw_set_align(1,1);
    draw_set_colour(c_white);
    
    draw_text_outline(800-32,608-32,string(floor(global.hitScore)),c_white,c_black);
    draw_text_outline(800-32,608-64,"x"+string(global.comboMultiplier),c_white,c_black);
    
    //if(global.freezeCombo){
        //draw_set_align(1,0);
        //draw_text(room_width-32-128-8,room_height-16,"FREEZE");
    //}
    
    if(global.debugMode){
        draw_set_align(-1,1);
        draw_text_outline(32,608-32,"FC: "+string(global.fullCombo),c_white,c_black);
        draw_text_outline(32,608-64,"RANK: "+rankText[global.currentRank],c_white,c_black);
    }
    draw_set_font(fDefault12);
    draw_set_align(1,1);
    
    
    ///draw the particles using a surface

    if(!surface_exists(surf)) surf=surface_create(800,608);
    
    
    surface_set_target(surf);
    draw_clear_alpha(0,0);
    
    
    part_system_drawit(global.scorebarpsys);
    
    surface_reset_target();
    draw_set_blend_mode(bm_add);
    
    
    draw_surface(surf,0,0);
    draw_set_blend_mode(bm_normal);

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
